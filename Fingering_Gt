#!/usr/bin/python3
# SPDX-FileCopyrightText: 2024 Kohaku Hirose 　　　　　
# SPDX-License-Identifier: BSD-3-Clause

import sys

# コードの情報を定義
chord_diagrams = {
    "C": ["x 3 2 0 1 0 1"],
    "Cm": ["x 3 5 5 4 3 3"],
    "Cmaj7": ["x 3 2 0 0 0 1"],
    "C7": ["x 3 2 3 1 0 1"],
    "Cm7": ["x 3 5 3 4 3 3"],
    "CmM7": ["x 3 1 0 0 3 1"],
    "Csus4": ["x 3 5 5 6 3 3"],
    "C7sus4": ["x 3 5 3 6 3 3"],
    "Cadd9": ["x 3 2 0 3 0 1"],
    "Cmadd9": ["x 3 1 0 3 3 1"],
    "C6": ["x 3 2 2 1 0 1"],
    "Cm6": ["x 3 x 2 4 3 2"],
    "Caug": ["x 3 2 1 1 x 1"],
    "Cdim": ["x 3 4 5 4 x 3"],
    "Cdim7": ["x 3 4 2 5 x 2"],
    "Cm7-5": ["x 3 4 3 4 x 3"],

    "D": ["x x 0 2 3 2 1"],
    "Dm": ["x x 0 2 3 1 1"],
    "Dmaj7": ["x x 0 2 2 2 1"],
    "D7": ["x x 0 2 1 2 1"],
    "Dm7": ["x x 0 2 1 1 1"],
    "DmM7": ["x x 0 2 2 1 1"],
    "Dsus4": ["x x 0 2 3 3 1"],
    "D7sus4": ["x x 0 2 1 3 1"],
    "Dadd9": ["x 5 4 2 3 0 2"],
    "Dmadd9": ["x 5 3 x 5 5 3"],
    "D6": ["x x 0 2 0 2 1"],
    "Dm6": ["x x 0 2 0 1 1"],
    "Daug": ["x x 0 3 3 2 1"],
    "Ddim": ["x 5 6 7 6 x x"],
    "Ddim7": ["x x 0 1 0 1 1"],
    "Dm7-5": ["x x 0 1 1 1 1"],

    "E": ["0 2 2 1 0 0 1"],
    "Em": ["0 2 2 0 0 0 1"],
    "Emaj7": ["0 2 1 1 0 0 1"],
    "E7": ["0 2 0 1 0 0 1"],
    "Em7": ["0 2 0 0 0 0 1"],
    "EmM7": ["0 2 1 0 0 0 1"],
    "Esus4": ["0 2 2 2 0 0 1"],
    "E7sus4": ["0 2 0 2 0 0 1"],
    "Eadd9": ["0 2 2 1 0 2 1"],
    "Emadd9": ["0 2 2 0 0 2 1"],
    "E6": ["0 2 2 1 2 0 1"],
    "Em6": ["0 2 2 0 2 0 1"],
    "Eaug": ["0 3 2 1 1 0 1"],
    "Edim": ["x 7 8 9 8 x 7"],
    "Edim7": ["0 1 2 0 2 0 1"],
    "Em7-5": ["0 1 2 0 3 0 1"],

    "F": ["1 3 3 2 1 1 1"],
    "Fm": ["1 3 3 1 1 1 1"],
    "Fmaj7": ["1 3 2 2 1 1 1"],
    "F7": ["1 3 1 2 1 1 1"],
    "Fm7": ["1 3 1 1 1 1 1"],
    "FmM7": ["1 3 2 1 1 1 1"],
    "Fsus4": ["1 3 3 3 1 1 1"],
    "F7sus4": ["1 3 1 3 1 1 1"],
    "Fadd9": ["x x 3 2 1 3 1"],
    "Fmadd9": ["x x 3 1 1 3 1"],
    "F6": ["1 3 0 2 3 x 1"],
    "Fm6": ["1 3 3 1 3 1 1"],
    "Faug": ["x x 3 2 2 1 1"],
    "Fdim": ["x x 3 1 0 1 1"],
    "Fdim7": ["1 2 3 1 3 1 1"],
    "Fm7-5": ["x x 3 4 4 4 3"],

    "G": ["3 2 0 0 0 3 1"],
    "Gm": ["3 5 5 3 3 3 3"],
    "Gmaj7": ["3 2 0 0 0 2 1"],
    "G7": ["3 2 0 0 0 1 1"],
    "Gm7": ["3 5 3 3 3 3 3"],
    "GmM7": ["3 5 4 3 3 3 3"],
    "Gsus4": ["3 3 0 0 1 3 1"],
    "G7sus4": ["3 3 0 0 1 1 1"],
    "Gadd9": ["3 x 0 2 0 3 1"],
    "Gmadd9": ["x x 5 3 3 5 3"],
    "G6": ["3 2 0 0 0 0 1"],
    "Gm6": ["3 1 0 0 3 0 1"],
    "Gaug": ["3 2 1 0 0 3 1"],
    "Gdim": ["3 4 5 3 x x 3"],
    "Gdim7": ["3 x 2 3 2 x 2"],
    "Gm7-5": ["3 x 3 3 2 x 2"],

    "A": ["x 0 2 2 2 0 1"],
    "Am": ["x 0 2 2 1 0 1"],
    "Amaj7": ["x 0 2 1 2 0 1"],
    "A7": ["x 0 2 0 2 0 1"],
    "Am7": ["x 0 2 0 1 0 1"],
    "AmM7": ["x 0 2 1 1 0 1"],
    "Asus4": ["x 0 2 2 3 0 1"],
    "A7sus4": ["x 0 2 0 3 0 1"],
    "Aadd9": ["x 0 2 4 2 0 1"],
    "Amadd9": ["x 0 2 4 1 0 1"],
    "A6": ["x 0 2 2 2 2 1"],
    "Am6": ["x 0 2 2 1 2 1"],
    "Aaug": ["x 0 3 2 2 1 1"],
    "Adim": ["x 0 1 2 1 x 1"],
    "Adim7": ["5 x 4 5 4 x 4"],
    "Am7-5": ["x 0 1 0 1 x 1"],

    "B": ["x 2 4 4 4 2 1"],
    "Bm": ["x 2 4 4 3 2 1"],
    "Bmaj7": ["x 2 4 3 4 2 1"],
    "B7": ["x 2 1 2 0 2 1"],
    "Bm7": ["x 2 4 2 3 2 1"],
    "BmM7": ["x 2 4 3 3 2 1"],
    "Bsus4": ["x 2 4 4 5 2 2"],
    "B7sus4": ["x 2 4 2 5 2 2"],
    "Badd9": ["x x 9 8 7 8 7"],
    "Bmadd9": ["x x 9 7 7 9 7"],
    "B6": ["x 2 1 1 0 2 1"],
    "Bm6": ["x 2 0 1 0 1 1"],
    "Baug": ["x 2 1 0 0 3 1"],
    "Bdim": ["x 2 3 4 3 x 2"],
    "Bdim7": ["x 2 3 1 3 x 1"],
    "Bm7-5": ["x 2 3 2 3 x 1"],

}

# フレットボードの基盤を定義
fretboard_base = [
    "┌───┬───┬───┬───┬",
    "├───┼───┼───┼───┼",
    "├───┼───┼───┼───┼",
    "├───┼───┼───┼───┼",
    "├───┼───┼───┼───┼",
    "└───┴───┴───┴───┴",

]

# 弦の名前
strings = ["e", "B", "G", "D", "A", "E"]

# フレットボードに押さえる位置を反映
def apply_chord_to_fretboard(base, diagram, base_fret):
    fretboard = base.copy()
    for string_index in range(6):  # 6本の弦
        fret_position = diagram[5 - string_index]  # 下から上の順でアクセス
        if fret_position not in ["x", "0"]:  # 押さえる場所のみ変更
            fret = int(fret_position)
            row = string_index  # 上から順に弦に対応する行
            col = 2 + 4 * (fret - base_fret)  # フレット位置の列を計算
            fretboard[row] = fretboard[row][:col] + "●" + fretboard[row][col + 1:]
    return fretboard

def display_fretboard_with_info(fretboard, diagram, base_fret):
    result = []
    for string_index in range(6):  # 6本の弦
        line = fretboard[string_index]
        fret_info = diagram[5 - string_index]  # 弦の押さえ情報
        symbol = "o" if fret_info == "0" else "x" if fret_info == "x" else " "
        result.append(f"{strings[string_index]} {symbol} {line}")

    # フレット番号を追加
    fret_numbers = "      " + "   ".join(str(base_fret + i) for i in range(4))
    result.append(fret_numbers)
    return "\n".join(result)


# ダイアグラムの描画
def draw_chord(chord_name):
    actual_chord_name = next((key for key in chord_diagrams if key.lower() == chord_name), None)

    if not actual_chord_name:
        sys.stderr.write("登録されていません\n")
        return False

    diagram = chord_diagrams[actual_chord_name][0].split()
    base_fret = int(diagram[-1])
    fretboard = apply_chord_to_fretboard(fretboard_base, diagram, base_fret)
    print(f"コード: {actual_chord_name}")
    print(display_fretboard_with_info(fretboard, diagram, base_fret))
    print()
    return True

# メイン処理
def main():
    for line in sys.stdin:
        chord_name = line.strip().lower()
        if chord_name:
            success = draw_chord(chord_name)
            if not success:
                sys.exit(1)

        else:
            sys.exit(1)

if __name__ == "__main__":
    main()
